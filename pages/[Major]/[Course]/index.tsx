import type { NextPage } from 'next'
import Head from 'next/head'
import Navbar from '../../../components/navbar/navbar'
import Post from '../../../components/post/Post'
import PostQ from '../../../components/postQ/postquestion'
import Leaderboard from '../../../components/leaderboard/leaderboard'
import styles from '../../../styles/CoursePage.module.scss'
import { initializeApp } from 'firebase/app'
import { getDatabase , ref, get, child } from "firebase/database"
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'
import { firebaseConfig } from '../../../utils'
import React from 'react'


const Course: NextPage<any> = ({dataArray, dataKey, dataKeyMajor, curData}) => {
    const router = useRouter()
    const [tmpDataArray, setDataArray] = useState(dataArray);
    const [originalState, setOriginalState] = useState(dataArray)

    useEffect(() => {
      setOriginalState(dataArray)
      if (curData === null) {router.push("/Error")}
    }, [])

    useEffect(() => {
      if (tmpDataArray.length > originalState.length)
        setOriginalState(tmpDataArray) 
    }, [tmpDataArray])

    return (
        <>
          <Head>
            <title> {dataKey.toUpperCase()}: {curData !== null? curData.courseName: "Loading..."} </title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <Navbar data={(dataArray.length > originalState.length)? dataArray: originalState} tmpData={tmpDataArray} setData={setDataArray} filterPost={true}/>
    
          <main className={styles.home}>
            {/* Tags */}
            <aside>
              {/* <h2> Tags </h2>
              <div>
                <div> Homework Help </div>
                <div> Mentor Help </div>
                <div> Internship Help </div>
              </div> */}
            </aside>
    
            {/* Posts/Feed */}
            <section> 

              {/* Post a Question */}

              <PostQ tmpData={tmpDataArray} setData={setDataArray}></PostQ>

              { tmpDataArray.length !== 0 && 
                tmpDataArray.map((object: any) =>

                (object.value !== null && 
                  <div key={object.key}>
                    <Post data={object} pathID={"/" + dataKeyMajor + "/" + dataKey + "/" + object.key}></Post>
                  </div>)
                )
              }
              
            </section>
    
            {/* Leaderboard */}
            <aside>
                {/* <Leaderboard data={null}/> */}
            </aside>
          </main>
        </>
      )
}

export default Course

export async function getServerSideProps(context: any) {
  const app = initializeApp(firebaseConfig)
  const database = getDatabase(app);

  let data: any = null;

  try {
    await get(child(ref(database), '/major/' + context.params.Major + '/courses/' + context.params.Course.toString().toUpperCase())).then((snapshot) => {
        data = snapshot.val();
    }).catch((error) => {
        console.log(error)
    })
  } catch (error) {
    console.log("ewww more error")
  }

  let tmpList = []

  if (data !== null) {
    for (const property in data["posts"]) {
      let tmpObj = {
        key: property,
        value: data["posts"][property]
      }

      tmpList.push(tmpObj)
    }
  }
  
  return {
    props: {
      dataArray: tmpList.reverse(),
      dataKeyMajor: context.params.Major,
      dataKey: context.params.Course,
      curData: data
    }
  }
}